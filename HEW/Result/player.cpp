/**********************************************************************
[[リザルト用プレイヤープログラム(Result/player.cpp)]]
	作者：奥田　真規

	ゲームのプレイヤーをリザルトで使うためのに関するプログラム
***********************************************************************/
#include "../Core/main.h"

#include "../GameTackle/player.h"
//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------

#define SIZE_XZ		(30.0f)
#define SIZE_Y		(7.0f)

#define ADD_ROTY	(0.008f)
//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------
static Mesh g_box = NULL;
static Matrix g_Mat;			// 上記マトリックス
static Texture g_Tex = NULL;	// 上記テクスチャ
static bool g_isForResult = false;

/*=====================================================================
更新関数
=====================================================================*/
void UpdateResultPlayer()
{
	GetPlayerRot()->y += ADD_ROTY;
	GetMatrix(&g_Mat, &Vec3(0, 0, 0), GetPlayerRot());

	// ゲームプレイヤーの更新
	UpdatePlayer();
}

/*=====================================================================
描画関数
=====================================================================*/
void DrawResultPlayer()
{
	D3DDEVICE;

	// ボックスの描画
	pDevice->SetTransform(D3DTS_WORLD, &g_Mat);
	pDevice->SetTexture(0, g_Tex);
	g_box->DrawSubset(0);

	// ゲームプレイヤーの描画
	DrawPlayer();
}

/*=====================================================================
初期化関数
=====================================================================*/
void InitResultPlayer(int type)
{
	if (type == 0)
	{
		D3DDEVICE;
		g_box = Create3DBoxMesh(&Vec3(SIZE_XZ, SIZE_Y, SIZE_XZ), &Vec3(0, -SIZE_Y / 2, 0));

		D3DXCreateTextureFromFile(pDevice, "data/TEXTURE/field003.jpg", &g_Tex);
	}

	ResetPlayerPos();

	// 初期位置は500とかなので0にする
	GetPlayerPos()->x = 0;
	GetPlayerPos()->y = 0;
	GetPlayerPos()->z = 0;

	g_isForResult = true;
}

/*=====================================================================
終了化関数
=====================================================================*/
void UninitResultPlayer()
{
	SAFE_RELEASE(g_box);
	SAFE_RELEASE(g_Tex);
}

/*=====================================================================
リザルト取得関数
=====================================================================*/
bool IsResultPlayer()
{
	return g_isForResult;
}

/*=====================================================================
リザルト設定関数
=====================================================================*/
void SetResultPlayer(bool isResult)
{
	g_isForResult = isResult;
}