//=============================================================================
//
// フェード処理 [fade.h]
// Author : 
//
//=============================================================================
#ifndef _FADE_H_
#define _FADE_H_

#include "main.h"

//*************************************
// フェードの状態
//*************************************
typedef enum
{
	FADE_NONE = 0,		// 何もない状態
	FADE_IN,			// フェードイン処理(フェードが取り払われる)
	FADE_OUT,			// フェードアウト処理(フェードが出現する)
	FADE_MAX
} FADE;


// フェードアニメーション列挙
enum FADE_ANIM {
	FADEANIM_DEFAULT,	// デフォルトアニメーション
	/*追加する場合はここに記述*/
};

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//=============================================================================
// フェード設定関数
// 次のフェーズに飛ぶ関数
// 引数:
//		PHASE_FUNC* NextPhaseFunc,	:次のフェーズ基本関数群
//		FADE_ANIM AnimType			:アニメーションタイプ（必須でない)
//=============================================================================
void GoNextPhase(PHASE_FUNC* NextPhaseFunc, FADE_ANIM AnimType = FADEANIM_DEFAULT);

//=============================================================================
// フェードの状態取得
//=============================================================================
FADE GetFade(void);


// フェード基本関数群
HRESULT InitFade(void);
void UninitFade(void);
void UpdateFade(void);
void DrawFade(void);


#endif
