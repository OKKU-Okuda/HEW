//=============================================================================
//
// コインの処理 [item.h]
// Author : 早野太智
//
//=============================================================================
#pragma once

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define	MAX_POLE				(1)							// アイテム最大数
#define	VALUE_ROTATE_POLE		(D3DX_PI * 0.025f)			// 回転速度
#define	POLE_RADIUS				(10.0f)						// 半径
#define POLE_SIZE_X				(10.0f)						// アイテムの当たり判定のサイズ
#define POLE_SIZE_Y				(10.0f)						// アイテムの当たり判定のサイズ
#define POLE_SIZE_Z				(10.0f)						// アイテムの当たり判定のサイズ

#define PLAYER_SIZE_X			(10.0f)						// プレイヤーの当たり判定のサイズ
#define PLAYER_SIZE_Y			(10.0f)						// プレイヤーの当たり判定のサイズ
#define PLAYER_SIZE_Z			(10.0f)						// プレイヤーの当たり判定のサイズ

//**************************************
// 種類
//**************************************
enum
{
	POLETYPE_COIN = 0,		// コイン
	POLETYPE_MAX
};

//*****************************************************************************
// 構造体定義
//*****************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;		// 現在の位置
	D3DXVECTOR3 scl;		// アイテムのスケール調整
	D3DXVECTOR3 rot;		// 現在の向き
	float fRadius;			// 半径
	int nIdxShadow;			// 影ID
	int nType;				// 種類
	bool bUse;				// 使用しているかどうか
	bool bHit;				// 当たり判定
} POLE;

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitPole(void);
void UninitPole(void);
void UpdatePole(void);
void DrawPole(void);

//=============================================================================
// アイテムの設定
//=============================================================================
void SetPole(FIELD_CHIP* pParent, D3DXVECTOR3 pos, D3DXVECTOR3 rot, int nType = POLETYPE_COIN);

void DeletePole(int nIdxPole);
void ResetPole();
POLE *GetPole(void);
