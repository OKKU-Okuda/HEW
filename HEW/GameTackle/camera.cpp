/**********************************************************************
[[Tackleカメラプログラム(GameTackle/camera.cpp)]]
	作者：奥田　真規

	タックルのカメラに関するプログラム
***********************************************************************/
#include"../Core/main.h"
#include "../Core/input.h"
#include "../Core/camera.h"
#include "../Core/debugproc.h"

#include "camera.h"	
#include "player.h"
//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------

#define CAMERA_ATOFFSET	(30)	// 注視点のプレイヤー座標からの3次元オフセット(y以外はいじるとやばい）
#define CAMERA_RANGE	(150.0f)		// プレイヤーからのレンジ
#define CAMERA_OFFSETY	(70.0f)		// 注視点からの視点オフセットｙ

#define CAMERA_DEBUGOFFSET		(Vec3(0, 55.0f, -180.0f))		// デバッグ用カメラの3次元オフセット
//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------
//static Vec3 OffsetCamPos(0, 55.0f, -180.0f);

/*=====================================================================
メインカメラ関数
=====================================================================*/
void TackleCameraUpdate(CAMERA* pCam)
{	
	Vec3 at = *GetPlayerPos();

	at.y = CAMERA_ATOFFSET;
	pCam->at = at;
	//pCam->pos = *GetPlayerPos() + OffsetCamPos;
	// カメラの注視点と視点を主人公に追従させる
	pCam->pos.x = sinf(GetPlayerRot()->y) * CAMERA_RANGE + pCam->at.x ; //+ OffsetCamPos.x;
	pCam->pos.z = cosf(GetPlayerRot()->y) * CAMERA_RANGE + pCam->at.z ; //+ OffsetCamPos.z;
	pCam->pos.y = pCam->at.y + CAMERA_OFFSETY;

}

/*=====================================================================
デバッグカメラ関数(固定）
=====================================================================*/
void DebugCameraUpdate(CAMERA* pCam)
{
	pCam->at = *GetPlayerPos();
	pCam->pos = *GetPlayerPos() + CAMERA_DEBUGOFFSET;
}