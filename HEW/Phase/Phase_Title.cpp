/**********************************************************************
[[フェーズ:Titleプログラム(Phase_Title.cpp)]]
	作者：奥田　真規

	フェーズ：Phase_Titleに関するプログラム
***********************************************************************/
#include"../Core/main.h"	
#include "../Core/fade.h"
#include "../Core/input.h"
#include "../Core/sound.h"
#include "../Core/camera.h"
#include "../Core/debugproc.h"

#include "../Core/directx_Helper3D.h"
#include "Phase_Title.h"	
#include "Phase_GameTackle1.h"
//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------


//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------

// 画面遷移基本関数群をまとめておく
static PHASE_FUNC	g_PhaseFunc = { InitTitle,UninitTitle,UpdateTitle,DrawTitle };
static MySound		g_Sound;
static Model		g_mdlPlayer;


static struct {
	VtxBuff		pVtx;	// 頂点バッファ
	Texture		pTex;	// 地面テクスチャ
	Matrix		Mat;	// 回転行列
}g_Field;							// フィールドワーク

/*=====================================================================
Title更新関数
=====================================================================*/
void UpdateTitle()
{
	PrintDebugProc("タイトルフェーズ");

	// 次のフェーズに行く
	if (GetKeyboardTrigger(DIK_RETURN))
	{	// タックル１
		GoNextPhase(GetPhaseGameTackle1Func());
	}
	

	if (GetKeyboardPress(DIK_UP))
	{
		g_mdlPlayer->WldMtx._43 += 1.0f;
	}
	if (GetKeyboardPress(DIK_DOWN))
	{
		g_mdlPlayer->WldMtx._43 -= 1.0f;
	}
	if (GetKeyboardPress(DIK_LEFT))
	{
		g_mdlPlayer->WldMtx._41 -= 1.0f;
	}

	if (GetKeyboardPress(DIK_RIGHT))
	{
		g_mdlPlayer->WldMtx._41 += 1.0f;
	}
	g_mdlPlayer->WldMtx._44 -= 0.01f;
	Vec4 vc(g_mdlPlayer->WldMtx.m[3]);
	PrintDebugProc("プレイヤー位置:%vec4", vc);

	PrintDebugProc("オフセット座標変更↑↓←→");
	//g_modelCity->WldMtx = g_mdlPlayer->WldMtx;
}

/*=====================================================================
Title描画関数
=====================================================================*/
void DrawTitle()
{
	DrawModel(g_mdlPlayer);
}

/*=====================================================================
Title初期化関数
	戻り値 : void
	引数 :
	bool isFirst		true:リソース読み込み系を含めた初期化処理を行う
							　※ この処理がある場合はmain.cpp内の		  ※
							  ※ InitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の初期化処理を行う
=====================================================================*/
void InitTitle(bool isFirst)
{
	if (isFirst == true)
	{
		//---------------------------------------------------------------------
		//	リソース読み込み処理(Create???,Load???,シリーズ)
		//---------------------------------------------------------------------
		g_Sound = MySoundCreate("data/BGM/bgm000.wav");

		g_mdlPlayer = CreateModel("data/MODEL/Player.x");

	}

	//---------------------------------------------------------------------
	//	グローバル変数等のステータス書き換え処理
	//---------------------------------------------------------------------

	MySoundPlayEternal(g_Sound);	// 永遠再生

	GetMatrix(&g_mdlPlayer->WldMtx);

}

/*=====================================================================
Title終了化関数
	戻り値 : void
	引数 :
	bool isEnd			true:リソース開放系を含めた終了化処理を行う
							　※ この処理がある場合はmain.cpp内の		    ※
							  ※ UninitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の終了化処理を行う	
=====================================================================*/
void UninitTitle(bool isEnd)
{

//---------------------------------------------------------------------
//	その他の終了処理
//---------------------------------------------------------------------

	MySoundStop(g_Sound);	// 停止


	if (isEnd == true)
	{
		//---------------------------------------------------------------------
		//	リソース開放処理
		//---------------------------------------------------------------------
		DeleteModel(&g_mdlPlayer);
		MySoundDeleteAuto(&g_Sound);// 増やしたものも一気に開放
	}

}

/*=====================================================================
Title基本関数群取得関数
=====================================================================*/
PHASE_FUNC* GetPhaseTitleFunc()
{
	return &g_PhaseFunc;
}