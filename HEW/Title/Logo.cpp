/**********************************************************************
[[Logoプログラム(Logo.cpp)]]
	作者：奥田　真規

	Logoに関するプログラム
***********************************************************************/
#include "logo.h"	

//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

// 基本関数群
static void InitLogo(bool isFirst);
static void UninitLogo(bool isEnd);
static void UpdateLogo();
static void DrawLogo();
//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------

// 画面遷移基本関数群をまとめておく
static OBJ_FUNC g_Func = { InitLogo,UninitLogo,NoFunction,DrawLogo };

static VERTEX_2D  g_vtx[NUM_VERTEX];	// ロゴ頂点
static Texture    g_tex;				// テクスチャ
static float	  g_col;				// 色

/*=====================================================================
Logo更新関数
=====================================================================*/
void UpdateLogo()
{

	// ロゴの更新
	g_col += 0.02f;
	Set2DVertexColor(g_vtx, Color(g_col, g_col, g_col, g_col));

	if (g_col > 1.0f)
	{	// 更新をしないように設定
		g_Func.Update = NoFunction;
	}
}

/*=====================================================================
Logo描画関数
=====================================================================*/
void DrawLogo()
{
	Draw2DVertex(g_tex, g_vtx);
}

/*=====================================================================
Logo初期化関数
	戻り値 : void
	引数 :
	bool isFirst		true:リソース読み込み系を含めた初期化処理を行う
							　※ この処理がある場合はmain.cpp内の		  ※
							  ※ InitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の初期化処理を行う
=====================================================================*/
void InitLogo(bool isFirst)
{
	if (isFirst == true)
	{
		//---------------------------------------------------------------------
		//	リソース読み込み処理(Create???,Load???,シリーズ)
		//---------------------------------------------------------------------

		D3DDEVICE;

		// タイトルロゴのテクスチャ読み込み
		D3DXCreateTextureFromFile(pDevice, "data/TEXTURE/TitleLogo_000.png", &g_tex);

		return;
	}

	//---------------------------------------------------------------------
	//	グローバル変数等のステータス書き換え処理
	//---------------------------------------------------------------------

	// ロゴ頂点の設置
	MakeNormal2DVertex(0, g_vtx, &Vec3(SCREEN_CENTER_X, SCREEN_CENTER_Y / 3.0f, 0), &Vec2(350, 120));
	Set2DVertexColor(g_vtx, Color(1.0f, 1.0f, 1.0f, 0.0f));
	g_col = 0.0f;

	g_Func = { InitLogo,UninitLogo,NoFunction,DrawLogo };
}

/*=====================================================================
Logo終了化関数
	戻り値 : void
	引数 :
	bool isEnd			true:リソース開放系を含めた終了化処理を行う
							　※ この処理がある場合はmain.cpp内の		    ※
							  ※ UninitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の終了化処理を行う	
=====================================================================*/
void UninitLogo(bool isEnd)
{
	//---------------------------------------------------------------------
	//	その他の終了処理
	//---------------------------------------------------------------------

	if (isEnd == false)
	{
		return;
	}
	//---------------------------------------------------------------------
	//	リソース開放処理
	//---------------------------------------------------------------------
	SAFE_RELEASE(g_tex);
}

/*=====================================================================
Logo基本関数群取得関数
=====================================================================*/
OBJ_FUNC* GetLogoFunc()
{
	return &g_Func;
}

/*=====================================================================
Logoアクティブ関数
=====================================================================*/
void SetLogoFuncActive()
{
	g_Func.Update = UpdateLogo;
}