/**********************************************************************
[[タイトルカメラプログラム(Title/camera.cpp)]]
	作者：奥田　真規

	タイトルカメラに関するプログラム
***********************************************************************/
#include "../Core/main.h"
#include "../Core/camera.h"

#include "camera.h"

//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------
#define ADD_RATE (0.02f)
//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------

static bool g_isPlayerLeftSide = false;		// プレイヤーを右側に置くようにするカメラモードにする
static float g_rate = 0.f;					// rate0:右側にプレイヤーを置く

//---------------------------------------------------------------------
//	カメラ更新変数
//---------------------------------------------------------------------
void UpdateTitleCameraFunc(CAMERA* pCam)
{
	const float AT_0X = -100.0f;
	const float AT_1X =  100.0f;
	const float AT_SA = AT_1X - AT_0X;
	//float rate;

	if (g_isPlayerLeftSide == true)
	{
		g_rate += ADD_RATE;
	}
	else
	{
		g_rate -= ADD_RATE;

	}
	SAFE_NUMBER(g_rate, 0, 1);

	pCam->at	= Vec3(AT_0X + (AT_SA * g_rate),0,0);
	pCam->pos	= Vec3(0.0f, 0.0f, -200.0f);
	pCam->up	= Vec3(0, 1, 0);
}

//---------------------------------------------------------------------
//	カメラ係数取得変数
//	0:プレイヤーが右側に
//	1:同上左側
//---------------------------------------------------------------------
float GetCameraRate()
{
	return g_rate;
}

//---------------------------------------------------------------------
//	リセット関数
//---------------------------------------------------------------------
void ResetTitleCameraParameter()
{
	g_rate = 0;
	g_isPlayerLeftSide = false;
}

//---------------------------------------------------------------------
//	サブメニュー遷移設定関数
//---------------------------------------------------------------------
void SetSubTitleMenu(bool isActiveSubMenu)
{
	g_isPlayerLeftSide = isActiveSubMenu;
}