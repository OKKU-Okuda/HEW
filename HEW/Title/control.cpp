/**********************************************************************
[[Controlプログラム(Control.cpp)]]
	作者：奥田　真規

	Controlに関するプログラム
***********************************************************************/
#include "../Core/input.h"
#include"../Core/main.h"

#include "../Core/fade.h"
#include "Control.h"	
#include "player.h"
#include "select.h"
#include "bottons.h"
#include "Logo.h"

//---------------------------------------------------------------------
//	マクロ定義(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	構造体、列挙体、共用体宣言(同cpp内限定)
//---------------------------------------------------------------------

//---------------------------------------------------------------------
//	プロトタイプ宣言(同cpp内限定)
//---------------------------------------------------------------------

// 基本関数群
static void InitControl(bool isFirst);
static void UninitControl(bool isEnd);
static void CheckFadeControl();
static void CheckPlayerControl();

//---------------------------------------------------------------------
//	グローバル変数
//---------------------------------------------------------------------

// 画面遷移基本関数群をまとめておく
static OBJ_FUNC g_Func = { InitControl,UninitControl,CheckFadeControl,NoFunction };

/*=====================================================================
Control更新関数
=====================================================================*/
void CheckFadeControl()
{
	if (GetFade() == FADE_NONE)
	{ // フェードが発生していない場合に実行

		// プレイヤーをアクティブ
		SetPlayerFuncActive();

		// コントロールの更新関数を更新
		g_Func.Update = CheckPlayerControl;
	}
}

void CheckPlayerControl()
{
	if (GetPlayerPosition()->z <= -105)
	{	// プレイヤーが指定位置にいる場合

		// セレクトをアクティブ
		SetSelectFuncActive();

		// ボタンをアクティブ
		SetBottonsFuncActive();

		// ロゴをアクティブ
		SetLogoFuncActive();

		// コントロールの更新関数を更新
		g_Func.Update = NoFunction;
	}
}

/*=====================================================================
Control初期化関数
	戻り値 : void
	引数 :
	bool isFirst		true:リソース読み込み系を含めた初期化処理を行う
							　※ この処理がある場合はmain.cpp内の		  ※
							  ※ InitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の初期化処理を行う
=====================================================================*/
void InitControl(bool isFirst)
{
	if (isFirst == true)
	{
		//---------------------------------------------------------------------
		//	リソース読み込み処理(Create???,Load???,シリーズ)
		//---------------------------------------------------------------------

		return;
	}

	//---------------------------------------------------------------------
	//	グローバル変数等のステータス書き換え処理
	//---------------------------------------------------------------------

	g_Func = { InitControl,UninitControl,CheckFadeControl,NoFunction };
}

/*=====================================================================
Control終了化関数
	戻り値 : void
	引数 :
	bool isEnd			true:リソース開放系を含めた終了化処理を行う
							　※ この処理がある場合はmain.cpp内の		    ※
							  ※ UninitGameResource関数に引数trueで書くこと ※

						false;リソース開放系以外の終了化処理を行う	
=====================================================================*/
void UninitControl(bool isEnd)
{
	//---------------------------------------------------------------------
	//	その他の終了処理
	//---------------------------------------------------------------------





	if (isEnd == false)
	{
		return;
	}

	//---------------------------------------------------------------------
	//	リソース開放処理
	//---------------------------------------------------------------------




}

/*=====================================================================
Control基本関数群取得関数
=====================================================================*/
OBJ_FUNC* GetControlFunc()
{
	return &g_Func;
}